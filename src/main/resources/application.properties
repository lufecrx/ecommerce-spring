# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://localhost:5432/ecommerce-spring
spring.datasource.username=postgres
spring.datasource.password=1234
spring.datasource.driver-class-name=org.postgresql.Driver

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
# spring.jpa.hibernate.ddl-auto=create-drop

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ===============================
# = LOGGING
# ===============================
# Name of the logfile
logging.file.name = application.log

# Log level
logging.level.org.springframework=INFO
# logging.level.com.example=DEBUG

# Rotate the log file
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=10 

# ===============================
# = SECURITY
# ===============================

# JWT Secret
auth.security.token.secret=${JWT_SECRET:secret-key}
# JWT expiration time in seconds, default is 2 hours
auth.security.token.expiration-time=${JWT_EXPIRATION_TIME:7200}

# ===============================
# = EMAIL
# ===============================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=youremail@gmail.com
# Generate app password for your gmail to use in the application because Google blocks the access from less secure apps
# https://myaccount.google.com/apppasswords 
spring.mail.password=your-password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true 
